{
  "version": 3,
  "sources": ["../../../../../node_modules/ngx-stripe/fesm2022/ngx-stripe.mjs"],
  "sourcesContent": ["import * as i3 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, PLATFORM_ID, Injectable, Inject, EventEmitter, Input, Output, TemplateRef, Component, Optional, ContentChild, ViewChild, makeEnvironmentProviders, NgModule, inject } from '@angular/core';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\nimport { BehaviorSubject, from } from 'rxjs';\nconst _c0 = [\"stripeElementRef\"];\nfunction StripeAddressComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeAffirmMessageComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeAfterpayClearpayMessageComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeCardComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeCardNumberComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeCardExpiryComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeCardCvcComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeEpsBankComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeExpressCheckoutComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeFpxBankComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeIbanComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeIdealBankComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeIssuingCardCvcDisplayComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeIssuingCardExpiryDisplayComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeIssuingCardNumberDisplayComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeIssuingCardPinDisplayComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeLinkAuthenticationComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeP24BankComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripeAuBankAccountComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nfunction StripePaymentMethodMessagingComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingTemplate);\n  }\n}\nclass NgxStripeElementLoadingTemplateDirective {\n  templateRef;\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n  static ɵfac = function NgxStripeElementLoadingTemplateDirective_Factory(t) {\n    return new (t || NgxStripeElementLoadingTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgxStripeElementLoadingTemplateDirective,\n    selectors: [[\"\", \"ngxStripeLoadingTemplate\", \"\"]],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxStripeElementLoadingTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxStripeLoadingTemplate]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }], null);\n})();\nconst STRIPE_PUBLISHABLE_KEY = new InjectionToken('Stripe Publishable Key');\nconst STRIPE_OPTIONS = new InjectionToken('Stripe Options');\nconst NGX_STRIPE_VERSION = new InjectionToken('NGX_STRIPE_VERSION');\nclass StripeInstance {\n  version;\n  loader;\n  window;\n  key;\n  options;\n  stripe$ = new BehaviorSubject(undefined);\n  stripe = this.stripe$.asObservable().pipe(filter(stripe => Boolean(stripe)));\n  constructor(version, loader, window, key, options) {\n    this.version = version;\n    this.loader = loader;\n    this.window = window;\n    this.key = key;\n    this.options = options;\n    this.loader.asStream().pipe(filter(status => status.loaded === true), first(), map(() => this.window.getNativeWindow().Stripe)).subscribe(stripeInstance => {\n      const stripe = this.options ? stripeInstance(this.key, this.options) : stripeInstance(this.key);\n      stripe.registerAppInfo(this.getNgxStripeAppInfo(this.version));\n      this.stripe$.next(stripe);\n    });\n  }\n  getInstance() {\n    return this.stripe$.getValue();\n  }\n  elements(options) {\n    return this.stripe.pipe(map(stripe => stripe.elements(options)), first());\n  }\n  redirectToCheckout(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.redirectToCheckout(options))), first());\n  }\n  confirmPayment(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayment(options))), first());\n  }\n  confirmAcssDebitPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAcssDebitPayment(clientSecret, data, options))), first());\n  }\n  confirmUsBankAccountPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmUsBankAccountPayment(clientSecret, data))), first());\n  }\n  confirmAlipayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAlipayPayment(clientSecret, data, options))), first());\n  }\n  confirmAuBecsDebitPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAuBecsDebitPayment(clientSecret, data))), first());\n  }\n  confirmBancontactPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBancontactPayment(clientSecret, data, options))), first());\n  }\n  confirmBlikPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBlikPayment(clientSecret, data, options))), first());\n  }\n  confirmBoletoPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBoletoPayment(clientSecret, data, options))), first());\n  }\n  confirmCardPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCardPayment(clientSecret, data, options))), first());\n  }\n  confirmCashappPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCashappPayment(clientSecret, data, options))), first());\n  }\n  confirmCustomerBalancePayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCustomerBalancePayment(clientSecret, data, options))), first());\n  }\n  confirmEpsPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmEpsPayment(clientSecret, data, options))), first());\n  }\n  confirmFpxPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmFpxPayment(clientSecret, data, options))), first());\n  }\n  confirmGiropayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmGiropayPayment(clientSecret, data, options))), first());\n  }\n  confirmGrabPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmGrabPayPayment(clientSecret, data, options))), first());\n  }\n  confirmIdealPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmIdealPayment(clientSecret, data, options))), first());\n  }\n  confirmKlarnaPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmKlarnaPayment(clientSecret, data, options))), first());\n  }\n  confirmKonbiniPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmKonbiniPayment(clientSecret, data, options))), first());\n  }\n  confirmOxxoPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmOxxoPayment(clientSecret, data, options))), first());\n  }\n  confirmP24Payment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmP24Payment(clientSecret, data, options))), first());\n  }\n  confirmPayNowPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayNowPayment(clientSecret, data, options))), first());\n  }\n  confirmPayPalPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayPalPayment(clientSecret, data))), first());\n  }\n  confirmPixPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPixPayment(clientSecret, data, options))), first());\n  }\n  confirmPromptPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPromptPayPayment(clientSecret, data, options))), first());\n  }\n  confirmSepaDebitPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSepaDebitPayment(clientSecret, data))), first());\n  }\n  confirmSofortPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSofortPayment(clientSecret, data, options))), first());\n  }\n  confirmWechatPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmWechatPayPayment(clientSecret, data, options))), first());\n  }\n  handleCardAction(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardAction(clientSecret))), first());\n  }\n  handleNextAction(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleNextAction(options))), first());\n  }\n  verifyMicrodepositsForPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyMicrodepositsForPayment(clientSecret, data))), first());\n  }\n  createRadarSession() {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createRadarSession())), first());\n  }\n  collectBankAccountForPayment(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.collectBankAccountForPayment(options))), first());\n  }\n  createPaymentMethod(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createPaymentMethod(options))), first());\n  }\n  retrievePaymentIntent(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrievePaymentIntent(clientSecret))), first());\n  }\n  confirmSetup(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSetup(options))), first());\n  }\n  confirmAcssDebitSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAcssDebitSetup(clientSecret, data, options))), first());\n  }\n  confirmUsBankAccountSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmUsBankAccountSetup(clientSecret, data))), first());\n  }\n  confirmAuBecsDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAuBecsDebitSetup(clientSecret, data))), first());\n  }\n  confirmBacsDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBacsDebitSetup(clientSecret, data))), first());\n  }\n  confirmBancontactSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBancontactSetup(clientSecret, data))), first());\n  }\n  confirmCardSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCardSetup(clientSecret, data, options))), first());\n  }\n  confirmCashappSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCashappSetup(clientSecret, data, options))), first());\n  }\n  confirmIdealSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmIdealSetup(clientSecret, data))), first());\n  }\n  confirmPayPalSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayPalSetup(clientSecret, data))), first());\n  }\n  confirmSepaDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSepaDebitSetup(clientSecret, data))), first());\n  }\n  confirmSofortSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSofortSetup(clientSecret, data, options))), first());\n  }\n  confirmAffirmPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAffirmPayment(clientSecret, data, options))), first());\n  }\n  confirmAfterpayClearpayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAfterpayClearpayPayment(clientSecret, data, options))), first());\n  }\n  verifyMicrodepositsForSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyMicrodepositsForSetup(clientSecret, data))), first());\n  }\n  collectBankAccountForSetup(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.collectBankAccountForSetup(options))), first());\n  }\n  retrieveSetupIntent(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrieveSetupIntent(clientSecret))), first());\n  }\n  processOrder(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.processOrder(options))), first());\n  }\n  retrieveOrder(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrieveOrder(clientSecret))), first());\n  }\n  paymentRequest(options) {\n    const stripe = this.getInstance();\n    return stripe.paymentRequest(options);\n  }\n  createToken(tokenType, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createToken(tokenType, data))), first());\n  }\n  createSource(a, b) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createSource(a, b))), first());\n  }\n  retrieveSource(source) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrieveSource(source))), first());\n  }\n  verifyIdentity(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyIdentity(clientSecret))), first());\n  }\n  collectFinancialConnectionsAccounts(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.collectFinancialConnectionsAccounts(options))), first());\n  }\n  collectBankAccountToken(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.collectBankAccountToken(options))), first());\n  }\n  createEphemeralKeyNonce(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createEphemeralKeyNonce(options))), first());\n  }\n  initCustomCheckout(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.initCustomCheckout(options))), first());\n  }\n  initEmbeddedCheckout(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.initEmbeddedCheckout(options))), first());\n  }\n  /**\n   * @deprecated\n   */\n  handleCardPayment(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardPayment(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPaymentIntent(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n  handleCardSetup(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardSetup(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSetupIntent(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleFpxPayment(clientSecret, element, data))), first());\n  }\n  getNgxStripeAppInfo(version) {\n    return {\n      name: 'ngx-stripe',\n      url: 'https://ngx-stripe.dev',\n      partner_id: 'pp_partner_JR4l1rmvUoPP4V',\n      version\n    };\n  }\n}\nclass WindowRef {\n  platformId;\n  constructor(platformId) {\n    this.platformId = platformId;\n  }\n  getNativeWindow() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window;\n    }\n    return {};\n  }\n  static ɵfac = function WindowRef_Factory(t) {\n    return new (t || WindowRef)(i0.ɵɵinject(PLATFORM_ID));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: WindowRef,\n    factory: WindowRef.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowRef, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], null);\n})();\nclass DocumentRef {\n  platformId;\n  constructor(platformId) {\n    this.platformId = platformId;\n  }\n  getNativeDocument() {\n    if (isPlatformBrowser(this.platformId)) {\n      return document;\n    }\n    return {};\n  }\n  static ɵfac = function DocumentRef_Factory(t) {\n    return new (t || DocumentRef)(i0.ɵɵinject(PLATFORM_ID));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DocumentRef,\n    factory: DocumentRef.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DocumentRef, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], null);\n})();\nclass LazyStripeAPILoader {\n  platformId;\n  window;\n  document;\n  status = new BehaviorSubject({\n    error: false,\n    loaded: false,\n    loading: false\n  });\n  constructor(platformId, window, document) {\n    this.platformId = platformId;\n    this.window = window;\n    this.document = document;\n  }\n  asStream() {\n    this.load();\n    return this.status.asObservable();\n  }\n  isReady() {\n    return this.status.getValue().loaded;\n  }\n  load() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    const status = this.status.getValue();\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else if (!status.loaded && !status.loading) {\n      this.status.next({\n        ...status,\n        loading: true\n      });\n      const script = this.document.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = 'https://js.stripe.com/v3/';\n      script.onload = () => {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      };\n      script.onerror = () => {\n        this.status.next({\n          error: true,\n          loaded: false,\n          loading: false\n        });\n      };\n      this.document.getNativeDocument().body.appendChild(script);\n    }\n  }\n  static ɵfac = function LazyStripeAPILoader_Factory(t) {\n    return new (t || LazyStripeAPILoader)(i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(WindowRef), i0.ɵɵinject(DocumentRef));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: LazyStripeAPILoader,\n    factory: LazyStripeAPILoader.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LazyStripeAPILoader, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: WindowRef\n  }, {\n    type: DocumentRef\n  }], null);\n})();\nclass StripeService {\n  version;\n  key;\n  options;\n  loader;\n  window;\n  stripe;\n  constructor(version, key, options, loader, window) {\n    this.version = version;\n    this.key = key;\n    this.options = options;\n    this.loader = loader;\n    this.window = window;\n    if (key) {\n      this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n    }\n  }\n  getStripeReference() {\n    return this.loader.asStream().pipe(filter(status => status.loaded === true), map(() => this.window.getNativeWindow().Stripe));\n  }\n  getInstance() {\n    return this.stripe.getInstance();\n  }\n  setKey(key, options) {\n    return this.changeKey(key, options);\n  }\n  changeKey(key, options) {\n    this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n    return this.stripe;\n  }\n  elements(options) {\n    return this.stripe.elements(options);\n  }\n  redirectToCheckout(options) {\n    return this.stripe.redirectToCheckout(options);\n  }\n  confirmPayment(options) {\n    return this.stripe.confirmPayment(options);\n  }\n  confirmAcssDebitPayment(clientSecret, data, options) {\n    return this.stripe.confirmAcssDebitPayment(clientSecret, data, options);\n  }\n  confirmUsBankAccountPayment(clientSecret, data) {\n    return this.stripe.confirmUsBankAccountPayment(clientSecret, data);\n  }\n  confirmAlipayPayment(clientSecret, data, options) {\n    return this.stripe.confirmAlipayPayment(clientSecret, data, options);\n  }\n  confirmAuBecsDebitPayment(clientSecret, data) {\n    return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n  }\n  confirmBancontactPayment(clientSecret, data, options) {\n    return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n  }\n  confirmBlikPayment(clientSecret, data, options) {\n    return this.stripe.confirmBlikPayment(clientSecret, data, options);\n  }\n  confirmBoletoPayment(clientSecret, data, options) {\n    return this.stripe.confirmBoletoPayment(clientSecret, data, options);\n  }\n  confirmCardPayment(clientSecret, data, options) {\n    return this.stripe.confirmCardPayment(clientSecret, data, options);\n  }\n  confirmCashappPayment(clientSecret, data, options) {\n    return this.stripe.confirmCashappPayment(clientSecret, data, options);\n  }\n  confirmCustomerBalancePayment(clientSecret, data, options) {\n    return this.stripe.confirmCustomerBalancePayment(clientSecret, data, options);\n  }\n  confirmEpsPayment(clientSecret, data, options) {\n    return this.stripe.confirmEpsPayment(clientSecret, data, options);\n  }\n  confirmFpxPayment(clientSecret, data, options) {\n    return this.stripe.confirmFpxPayment(clientSecret, data, options);\n  }\n  confirmGiropayPayment(clientSecret, data, options) {\n    return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n  }\n  confirmGrabPayPayment(clientSecret, data, options) {\n    return this.stripe.confirmGrabPayPayment(clientSecret, data, options);\n  }\n  confirmIdealPayment(clientSecret, data, options) {\n    return this.stripe.confirmIdealPayment(clientSecret, data, options);\n  }\n  confirmKlarnaPayment(clientSecret, data, options) {\n    return this.stripe.confirmKlarnaPayment(clientSecret, data, options);\n  }\n  confirmKonbiniPayment(clientSecret, data, options) {\n    return this.stripe.confirmKonbiniPayment(clientSecret, data, options);\n  }\n  confirmOxxoPayment(clientSecret, data, options) {\n    return this.stripe.confirmOxxoPayment(clientSecret, data, options);\n  }\n  confirmP24Payment(clientSecret, data, options) {\n    return this.stripe.confirmP24Payment(clientSecret, data, options);\n  }\n  confirmPayNowPayment(clientSecret, data, options) {\n    return this.stripe.confirmPayNowPayment(clientSecret, data, options);\n  }\n  confirmPayPalPayment(clientSecret, data) {\n    return this.stripe.confirmPayPalPayment(clientSecret, data);\n  }\n  confirmPixPayment(clientSecret, data, options) {\n    return this.stripe.confirmPixPayment(clientSecret, data, options);\n  }\n  confirmPromptPayPayment(clientSecret, data, options) {\n    return this.stripe.confirmPromptPayPayment(clientSecret, data, options);\n  }\n  confirmSepaDebitPayment(clientSecret, data) {\n    return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n  }\n  confirmSofortPayment(clientSecret, data, options) {\n    return this.stripe.confirmSofortPayment(clientSecret, data, options);\n  }\n  confirmWechatPayPayment(clientSecret, data, options) {\n    return this.stripe.confirmWechatPayPayment(clientSecret, data, options);\n  }\n  handleCardAction(clientSecret) {\n    return this.stripe.handleCardAction(clientSecret);\n  }\n  handleNextAction(options) {\n    return this.stripe.handleNextAction(options);\n  }\n  verifyMicrodepositsForPayment(clientSecret, data) {\n    return this.stripe.verifyMicrodepositsForPayment(clientSecret, data);\n  }\n  createRadarSession() {\n    return this.stripe.createRadarSession();\n  }\n  collectBankAccountForPayment(options) {\n    return this.stripe.collectBankAccountForPayment(options);\n  }\n  createPaymentMethod(options) {\n    return this.stripe.createPaymentMethod(options);\n  }\n  retrievePaymentIntent(clientSecret) {\n    return this.stripe.retrievePaymentIntent(clientSecret);\n  }\n  confirmSetup(options) {\n    return this.stripe.confirmSetup(options);\n  }\n  confirmAcssDebitSetup(clientSecret, data, options) {\n    return this.stripe.confirmAcssDebitSetup(clientSecret, data, options);\n  }\n  confirmUsBankAccountSetup(clientSecret, data) {\n    return this.stripe.confirmUsBankAccountSetup(clientSecret, data);\n  }\n  confirmAuBecsDebitSetup(clientSecret, data) {\n    return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n  }\n  confirmBacsDebitSetup(clientSecret, data) {\n    return this.stripe.confirmBacsDebitSetup(clientSecret, data);\n  }\n  confirmBancontactSetup(clientSecret, data) {\n    return this.stripe.confirmBancontactSetup(clientSecret, data);\n  }\n  confirmCardSetup(clientSecret, data, options) {\n    return this.stripe.confirmCardSetup(clientSecret, data, options);\n  }\n  confirmCashappSetup(clientSecret, data, options) {\n    return this.stripe.confirmCashappSetup(clientSecret, data, options);\n  }\n  confirmIdealSetup(clientSecret, data) {\n    return this.stripe.confirmIdealSetup(clientSecret, data);\n  }\n  confirmPayPalSetup(clientSecret, data) {\n    return this.stripe.confirmPayPalSetup(clientSecret, data);\n  }\n  confirmSepaDebitSetup(clientSecret, data) {\n    return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n  }\n  confirmSofortSetup(clientSecret, data, options) {\n    return this.stripe.confirmSofortSetup(clientSecret, data, options);\n  }\n  confirmAffirmPayment(clientSecret, data, options) {\n    return this.stripe.confirmAffirmPayment(clientSecret, data, options);\n  }\n  confirmAfterpayClearpayPayment(clientSecret, data, options) {\n    return this.stripe.confirmAfterpayClearpayPayment(clientSecret, data, options);\n  }\n  verifyMicrodepositsForSetup(clientSecret, data) {\n    return this.stripe.verifyMicrodepositsForSetup(clientSecret, data);\n  }\n  collectBankAccountForSetup(options) {\n    return this.stripe.collectBankAccountForSetup(options);\n  }\n  retrieveSetupIntent(clientSecret) {\n    return this.stripe.retrieveSetupIntent(clientSecret);\n  }\n  processOrder(options) {\n    return this.stripe.processOrder(options);\n  }\n  retrieveOrder(clientSecret) {\n    return this.stripe.retrieveOrder(clientSecret);\n  }\n  paymentRequest(options) {\n    return this.stripe.paymentRequest(options);\n  }\n  createToken(tokenType, data) {\n    return this.stripe.createToken(tokenType, data);\n  }\n  createSource(a, b) {\n    return this.stripe.createSource(a, b);\n  }\n  retrieveSource(source) {\n    return this.stripe.retrieveSource(source);\n  }\n  verifyIdentity(clientSecret) {\n    return this.stripe.verifyIdentity(clientSecret);\n  }\n  collectFinancialConnectionsAccounts(options) {\n    return this.stripe.collectFinancialConnectionsAccounts(options);\n  }\n  collectBankAccountToken(options) {\n    return this.stripe.collectBankAccountToken(options);\n  }\n  createEphemeralKeyNonce(options) {\n    return this.stripe.createEphemeralKeyNonce(options);\n  }\n  initCustomCheckout(options) {\n    return this.stripe.initCustomCheckout(options);\n  }\n  initEmbeddedCheckout(options) {\n    return this.stripe.initEmbeddedCheckout(options);\n  }\n  /**\n   * @deprecated\n   */\n  handleCardPayment(clientSecret, element, data) {\n    return this.stripe.handleCardPayment(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(clientSecret, element, data) {\n    return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n  handleCardSetup(clientSecret, element, data) {\n    return this.stripe.handleCardSetup(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(clientSecret, element, data) {\n    return this.stripe.confirmSetupIntent(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(clientSecret, element, data) {\n    return this.stripe.handleFpxPayment(clientSecret, element, data);\n  }\n  static ɵfac = function StripeService_Factory(t) {\n    return new (t || StripeService)(i0.ɵɵinject(NGX_STRIPE_VERSION), i0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), i0.ɵɵinject(STRIPE_OPTIONS), i0.ɵɵinject(LazyStripeAPILoader), i0.ɵɵinject(WindowRef));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: StripeService,\n    factory: StripeService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeService, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [NGX_STRIPE_VERSION]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [STRIPE_PUBLISHABLE_KEY]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [STRIPE_OPTIONS]\n    }]\n  }, {\n    type: LazyStripeAPILoader\n  }, {\n    type: WindowRef\n  }], null);\n})();\nclass StripeElementsService {\n  stripeService;\n  constructor(stripeService) {\n    this.stripeService = stripeService;\n  }\n  elements(stripe, options = {}) {\n    if (stripe) {\n      if (Object.keys(options).length > 0) {\n        return stripe.elements(options);\n      }\n      return stripe.elements();\n    } else {\n      if (Object.keys(options).length > 0) {\n        return this.stripeService.elements(options);\n      }\n      return this.stripeService.elements();\n    }\n  }\n  paymentRequest(stripe, options) {\n    return stripe ? stripe.paymentRequest(options) : this.stripeService.paymentRequest(options);\n  }\n  mergeOptions(options, containerClass) {\n    if (!containerClass || options && options.classes) {\n      return options || {};\n    }\n    if (!options || !options.classes) {\n      return {\n        ...(options || {}),\n        classes: {\n          base: containerClass,\n          complete: `${containerClass}--complete`,\n          empty: `${containerClass}--empty`,\n          focus: `${containerClass}--focus`,\n          invalid: `${containerClass}--invalid`,\n          webkitAutoFill: `${containerClass}--webkit-autoFill`\n        }\n      };\n    }\n    return options || {};\n  }\n  static ɵfac = function StripeElementsService_Factory(t) {\n    return new (t || StripeElementsService)(i0.ɵɵinject(StripeService));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: StripeElementsService,\n    factory: StripeElementsService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeElementsService, [{\n    type: Injectable\n  }], () => [{\n    type: StripeService\n  }], null);\n})();\nclass StripeElementsDirective {\n  stripeElementsService;\n  elementsOptions;\n  stripe;\n  elements = new EventEmitter();\n  _elements;\n  state = 'notready';\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n    if (!stripe) {\n      this.state = 'notready';\n      return;\n    }\n    if (changes.elementsOptions) {\n      if (this._elements) {\n        const payload = Object.keys(elementsOptions).reduce((acc, key) => {\n          if (elementsOptions[key] !== changes.elementsOptions.previousValue[key] && !['fonts', 'loader', 'clientSecret'].includes(key)) {\n            acc[key] = elementsOptions[key];\n          }\n          return acc;\n        }, {});\n        this._elements.update(payload);\n      } else {\n        this._elements = await this.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n        this.elements.emit(this._elements);\n        this.state = 'ready';\n      }\n    }\n  }\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n      this._elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.elements.emit(this._elements);\n      this.state = 'ready';\n    }\n  }\n  fetchUpdates() {\n    if (!this._elements) return null;\n    return from(this._elements.fetchUpdates());\n  }\n  update(options) {\n    if (!this._elements) return null;\n    return this._elements.update(options);\n  }\n  submit() {\n    if (!this._elements) return null;\n    return from(this._elements.submit());\n  }\n  getElement(elementType) {\n    if (!this._elements) return null;\n    switch (elementType) {\n      case 'address':\n        return this._elements.getElement('address');\n      case 'paymentMethodMessaging':\n        return this._elements.getElement('paymentMethodMessaging');\n      case 'affirmMessage':\n        return this._elements.getElement('affirmMessage');\n      case 'afterpayClearpayMessage':\n        return this._elements.getElement('afterpayClearpayMessage');\n      case 'auBankAccount':\n        return this._elements.getElement('auBankAccount');\n      case 'card':\n        return this._elements.getElement('card');\n      case 'cardNumber':\n        return this._elements.getElement('cardNumber');\n      case 'cardExpiry':\n        return this._elements.getElement('cardExpiry');\n      case 'cardCvc':\n        return this._elements.getElement('cardCvc');\n      case 'fpxBank':\n        return this._elements.getElement('fpxBank');\n      case 'epsBank':\n        return this._elements.getElement('epsBank');\n      case 'p24Bank':\n        return this._elements.getElement('p24Bank');\n      case 'iban':\n        return this._elements.getElement('iban');\n      case 'idealBank':\n        return this._elements.getElement('idealBank');\n      case 'linkAuthentication':\n        return this._elements.getElement('linkAuthentication');\n      case 'expressCheckout':\n        return this._elements.getElement('expressCheckout');\n      case 'payment':\n        return this._elements.getElement('payment');\n      case 'paymentRequestButton':\n        return this._elements.getElement('paymentRequestButton');\n      case 'shippingAddress':\n        return this._elements.getElement('shippingAddress');\n      default:\n        return this._elements.getElement(elementType);\n    }\n  }\n  static ɵfac = function StripeElementsDirective_Factory(t) {\n    return new (t || StripeElementsDirective)(i0.ɵɵdirectiveInject(StripeElementsService));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: StripeElementsDirective,\n    selectors: [[\"ngx-stripe-elements\"], [\"\", \"ngxStripeElements\", \"\"]],\n    inputs: {\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      elements: \"elements\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeElementsDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-stripe-elements,[ngxStripeElements]',\n      standalone: true\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }], {\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    elements: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeAddressComponent {\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  loaderror = new EventEmitter();\n  loaderstart = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    return this.element.update(options);\n  }\n  getValue() {\n    const address = this.elements.getElement('address');\n    return address.getValue();\n  }\n  /**\n   * @deprecated\n   */\n  getAddressElement() {\n    return this.element;\n  }\n  createElement(options) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('address', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.on('loaderror', () => this.loaderror.emit());\n    this.element.on('loaderstart', () => this.loaderstart.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeAddressComponent_Factory(t) {\n    return new (t || StripeAddressComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeAddressComponent,\n    selectors: [[\"ngx-stripe-address\"]],\n    contentQueries: function StripeAddressComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeAddressComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\",\n      loaderror: \"loaderror\",\n      loaderstart: \"loaderstart\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeAddressComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeAddressComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeAddressComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-address',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }],\n    loaderror: [{\n      type: Output\n    }],\n    loaderstart: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeAffirmMessageComponent {\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  ready = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getAffirmMessage() {\n    return this.element;\n  }\n  createElement(options) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('affirmMessage', options);\n    this.element.on('ready', () => this.ready.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeAffirmMessageComponent_Factory(t) {\n    return new (t || StripeAffirmMessageComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeAffirmMessageComponent,\n    selectors: [[\"ngx-stripe-affirm-message\"]],\n    contentQueries: function StripeAffirmMessageComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeAffirmMessageComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      ready: \"ready\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeAffirmMessageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeAffirmMessageComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeAffirmMessageComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-affirm-message',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeAfterpayClearpayMessageComponent {\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  ready = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getAfterpayClearpayMessage() {\n    return this.element;\n  }\n  createElement(options) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('afterpayClearpayMessage', options);\n    this.element.on('ready', () => this.ready.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeAfterpayClearpayMessageComponent_Factory(t) {\n    return new (t || StripeAfterpayClearpayMessageComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeAfterpayClearpayMessageComponent,\n    selectors: [[\"ngx-stripe-afterpay-clearpay-message\"]],\n    contentQueries: function StripeAfterpayClearpayMessageComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeAfterpayClearpayMessageComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      ready: \"ready\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeAfterpayClearpayMessageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeAfterpayClearpayMessageComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeAfterpayClearpayMessageComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-afterpay-clearpay-message',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeCardComponent {\n  cdr;\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(cdr, stripeElementsService, elementsProvider) {\n    this.cdr = cdr;\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getCard() {\n    return this.element;\n  }\n  createElement(options = {}) {\n    this.state = 'ready';\n    this.cdr.detectChanges();\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('card', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeCardComponent_Factory(t) {\n    return new (t || StripeCardComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeCardComponent,\n    selectors: [[\"ngx-stripe-card\"]],\n    contentQueries: function StripeCardComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeCardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeCardComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeCardGroupDirective {\n  stripeElementsService;\n  elementsOptions;\n  stripe;\n  elements = new EventEmitter();\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  _elements;\n  state = 'notready';\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n    if (changes.elementsOptions || changes.stripe || !this._elements) {\n      this._elements = await this.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n      this.elements.emit(this._elements);\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n      this._elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.elements.emit(this._elements);\n      this.state = 'ready';\n    }\n  }\n  static ɵfac = function StripeCardGroupDirective_Factory(t) {\n    return new (t || StripeCardGroupDirective)(i0.ɵɵdirectiveInject(StripeElementsService));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: StripeCardGroupDirective,\n    selectors: [[\"ngx-stripe-card-group\"], [\"\", \"ngxStripeCardGroup\", \"\"]],\n    inputs: {\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      elements: \"elements\",\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]',\n      standalone: true\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }], {\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    elements: [{\n      type: Output\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeCardNumberComponent {\n  stripeElementsService;\n  cardGroup;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  elements;\n  elementsSubscription;\n  constructor(stripeElementsService, cardGroup, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.cardGroup = cardGroup;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.elementsSubscription = this.cardGroup.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardNumberComponent must have StripeCardGroupDirective or StripeElementsDirective parent');\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getCardNumber() {\n    return this.element;\n  }\n  setupElement(source) {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardNumber', options);\n      this.element.on('change', ev => {\n        this.change.emit(ev);\n        this.cardGroup?.change.emit(ev);\n      });\n      this.element.on('blur', () => {\n        this.blur.emit();\n        this.cardGroup?.blur.emit();\n      });\n      this.element.on('focus', () => {\n        this.focus.emit();\n        this.cardGroup?.focus.emit();\n      });\n      this.element.on('ready', () => {\n        this.ready.emit();\n        this.cardGroup?.ready.emit();\n      });\n      this.element.on('escape', () => {\n        this.escape.emit();\n        this.cardGroup?.escape.emit();\n      });\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n      this.cardGroup?.load.emit(this.element);\n    }\n  }\n  static ɵfac = function StripeCardNumberComponent_Factory(t) {\n    return new (t || StripeCardNumberComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeCardNumberComponent,\n    selectors: [[\"ngx-stripe-card-number\"]],\n    contentQueries: function StripeCardNumberComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeCardNumberComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeCardNumberComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeCardNumberComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardNumberComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card-number',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (cardGroup && cardGroup.state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeCardGroupDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeCardExpiryComponent {\n  stripeElementsService;\n  cardGroup;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  elements;\n  elementsSubscription;\n  constructor(stripeElementsService, cardGroup, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.cardGroup = cardGroup;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.elementsSubscription = this.cardGroup.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardExpiryComponent must have StripeCardGroupDirective or StripeElementsDirective parent');\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getCardExpiry() {\n    return this.element;\n  }\n  setupElement(source) {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardExpiry', options);\n      this.element.on('change', ev => {\n        this.change.emit(ev);\n        this.cardGroup?.change.emit(ev);\n      });\n      this.element.on('blur', () => {\n        this.blur.emit();\n        this.cardGroup?.blur.emit();\n      });\n      this.element.on('focus', () => {\n        this.focus.emit();\n        this.cardGroup?.focus.emit();\n      });\n      this.element.on('ready', () => {\n        this.ready.emit();\n        this.cardGroup?.ready.emit();\n      });\n      this.element.on('escape', () => {\n        this.escape.emit();\n        this.cardGroup?.escape.emit();\n      });\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n      this.cardGroup?.load.emit(this.element);\n    }\n  }\n  static ɵfac = function StripeCardExpiryComponent_Factory(t) {\n    return new (t || StripeCardExpiryComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeCardExpiryComponent,\n    selectors: [[\"ngx-stripe-card-expiry\"]],\n    contentQueries: function StripeCardExpiryComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeCardExpiryComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeCardExpiryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeCardExpiryComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardExpiryComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card-expiry',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (cardGroup && cardGroup.state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeCardGroupDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeCardCvcComponent {\n  stripeElementsService;\n  cardGroup;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  elements;\n  elementsSubscription;\n  constructor(stripeElementsService, cardGroup, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.cardGroup = cardGroup;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.elementsSubscription = this.cardGroup.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardCvcComponent must have StripeCardGroupDirective or StripeElementsDirective parent');\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getCardCvc() {\n    return this.element;\n  }\n  setupElement(source) {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardCvc', options);\n      this.element.on('change', ev => {\n        this.change.emit(ev);\n        this.cardGroup?.change.emit(ev);\n      });\n      this.element.on('blur', () => {\n        this.blur.emit();\n        this.cardGroup?.blur.emit();\n      });\n      this.element.on('focus', () => {\n        this.focus.emit();\n        this.cardGroup?.focus.emit();\n      });\n      this.element.on('ready', () => {\n        this.ready.emit();\n        this.cardGroup?.ready.emit();\n      });\n      this.element.on('escape', () => {\n        this.escape.emit();\n        this.cardGroup?.escape.emit();\n      });\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n      this.cardGroup?.load.emit(this.element);\n    }\n  }\n  static ɵfac = function StripeCardCvcComponent_Factory(t) {\n    return new (t || StripeCardCvcComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeCardCvcComponent,\n    selectors: [[\"ngx-stripe-card-cvc\"]],\n    contentQueries: function StripeCardCvcComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeCardCvcComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeCardCvcComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeCardCvcComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardCvcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card-cvc',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (cardGroup && cardGroup.state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeCardGroupDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeEpsBankComponent {\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getEpsBankelement() {\n    return this.element;\n  }\n  createElement(options) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('epsBank', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeEpsBankComponent_Factory(t) {\n    return new (t || StripeEpsBankComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeEpsBankComponent,\n    selectors: [[\"ngx-stripe-eps-bank\"]],\n    contentQueries: function StripeEpsBankComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeEpsBankComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeEpsBankComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeEpsBankComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeEpsBankComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-eps-bank',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeExpressCheckoutComponent {\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  cancel = new EventEmitter();\n  clicked = new EventEmitter();\n  confirm = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  loaderror = new EventEmitter();\n  shippingaddresschange = new EventEmitter();\n  shippingratechange = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    return this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getLinkAuthenticationElement() {\n    return this.element;\n  }\n  createElement(options) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('expressCheckout', options);\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('cancel', () => this.cancel.emit());\n    this.element.on('click', ev => this.clicked.emit(ev));\n    this.element.on('confirm', ev => this.confirm.emit(ev));\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', ev => this.ready.emit(ev));\n    this.element.on('escape', () => this.escape.emit());\n    this.element.on('loaderror', err => this.loaderror.emit(err));\n    this.element.on('shippingaddresschange', ev => this.shippingaddresschange.emit(ev));\n    this.element.on('shippingratechange', ev => this.shippingratechange.emit(ev));\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeExpressCheckoutComponent_Factory(t) {\n    return new (t || StripeExpressCheckoutComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeExpressCheckoutComponent,\n    selectors: [[\"ngx-stripe-express-checkout\"]],\n    contentQueries: function StripeExpressCheckoutComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeExpressCheckoutComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      cancel: \"cancel\",\n      clicked: \"clicked\",\n      confirm: \"confirm\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\",\n      loaderror: \"loaderror\",\n      shippingaddresschange: \"shippingaddresschange\",\n      shippingratechange: \"shippingratechange\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeExpressCheckoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeExpressCheckoutComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeExpressCheckoutComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-express-checkout',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    cancel: [{\n      type: Output\n    }],\n    clicked: [{\n      type: Output\n    }],\n    confirm: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }],\n    loaderror: [{\n      type: Output\n    }],\n    shippingaddresschange: [{\n      type: Output\n    }],\n    shippingratechange: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeFpxBankComponent {\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getFpxBank() {\n    return this.element;\n  }\n  createElement(options = {\n    accountHolderType: 'individual'\n  }) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('fpxBank', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeFpxBankComponent_Factory(t) {\n    return new (t || StripeFpxBankComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeFpxBankComponent,\n    selectors: [[\"ngx-stripe-fpx-bank\"]],\n    contentQueries: function StripeFpxBankComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeFpxBankComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeFpxBankComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeFpxBankComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeFpxBankComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-fpx-bank',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeIbanComponent {\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getIban() {\n    return this.element;\n  }\n  createElement(options = {}) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('iban', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeIbanComponent_Factory(t) {\n    return new (t || StripeIbanComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeIbanComponent,\n    selectors: [[\"ngx-stripe-iban\"]],\n    contentQueries: function StripeIbanComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeIbanComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeIbanComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeIbanComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeIbanComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-iban',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeIdealBankComponent {\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getIdealBank() {\n    return this.element;\n  }\n  createElement(options = {}) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('idealBank', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeIdealBankComponent_Factory(t) {\n    return new (t || StripeIdealBankComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeIdealBankComponent,\n    selectors: [[\"ngx-stripe-ideal-bank\"]],\n    contentQueries: function StripeIdealBankComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeIdealBankComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeIdealBankComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeIdealBankComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeIdealBankComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-ideal-bank',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeIssuingCardCvcDisplayComponent {\n  cdr;\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(cdr, stripeElementsService, elementsProvider) {\n    this.cdr = cdr;\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  createElement(options) {\n    this.state = 'ready';\n    this.cdr.detectChanges();\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('issuingCardCvcDisplay', options);\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeIssuingCardCvcDisplayComponent_Factory(t) {\n    return new (t || StripeIssuingCardCvcDisplayComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeIssuingCardCvcDisplayComponent,\n    selectors: [[\"ngx-stripe-issuing-card-cvc-display\"]],\n    contentQueries: function StripeIssuingCardCvcDisplayComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeIssuingCardCvcDisplayComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeIssuingCardCvcDisplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeIssuingCardCvcDisplayComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeIssuingCardCvcDisplayComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-issuing-card-cvc-display',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeIssuingCardExpiryDisplayComponent {\n  cdr;\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(cdr, stripeElementsService, elementsProvider) {\n    this.cdr = cdr;\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  createElement(options) {\n    this.state = 'ready';\n    this.cdr.detectChanges();\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('issuingCardExpiryDisplay', options);\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeIssuingCardExpiryDisplayComponent_Factory(t) {\n    return new (t || StripeIssuingCardExpiryDisplayComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeIssuingCardExpiryDisplayComponent,\n    selectors: [[\"ngx-stripe-issuing-card-expiry-display\"]],\n    contentQueries: function StripeIssuingCardExpiryDisplayComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeIssuingCardExpiryDisplayComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeIssuingCardExpiryDisplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeIssuingCardExpiryDisplayComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeIssuingCardExpiryDisplayComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-issuing-card-expiry-display',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeIssuingCardNumberDisplayComponent {\n  cdr;\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(cdr, stripeElementsService, elementsProvider) {\n    this.cdr = cdr;\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  createElement(options) {\n    this.state = 'ready';\n    this.cdr.detectChanges();\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('issuingCardNumberDisplay', options);\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeIssuingCardNumberDisplayComponent_Factory(t) {\n    return new (t || StripeIssuingCardNumberDisplayComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeIssuingCardNumberDisplayComponent,\n    selectors: [[\"ngx-stripe-issuing-card-number-display\"]],\n    contentQueries: function StripeIssuingCardNumberDisplayComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeIssuingCardNumberDisplayComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeIssuingCardNumberDisplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeIssuingCardNumberDisplayComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeIssuingCardNumberDisplayComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-issuing-card-number-display',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeIssuingCardPinDisplayComponent {\n  cdr;\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(cdr, stripeElementsService, elementsProvider) {\n    this.cdr = cdr;\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  createElement(options) {\n    this.state = 'ready';\n    this.cdr.detectChanges();\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('issuingCardPinDisplay', options);\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeIssuingCardPinDisplayComponent_Factory(t) {\n    return new (t || StripeIssuingCardPinDisplayComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeIssuingCardPinDisplayComponent,\n    selectors: [[\"ngx-stripe-issuing-card-pin-display\"]],\n    contentQueries: function StripeIssuingCardPinDisplayComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeIssuingCardPinDisplayComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeIssuingCardPinDisplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeIssuingCardPinDisplayComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeIssuingCardPinDisplayComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-issuing-card-pin-display',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeLinkAuthenticationComponent {\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  loaderror = new EventEmitter();\n  loaderstart = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  /**\n   * @deprecated\n   */\n  getLinkAuthenticationElement() {\n    return this.element;\n  }\n  createElement(options) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('linkAuthentication', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.on('loaderror', () => this.loaderror.emit());\n    this.element.on('loaderstart', () => this.loaderstart.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeLinkAuthenticationComponent_Factory(t) {\n    return new (t || StripeLinkAuthenticationComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeLinkAuthenticationComponent,\n    selectors: [[\"ngx-stripe-link-authentication\"]],\n    contentQueries: function StripeLinkAuthenticationComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeLinkAuthenticationComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\",\n      loaderror: \"loaderror\",\n      loaderstart: \"loaderstart\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeLinkAuthenticationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeLinkAuthenticationComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeLinkAuthenticationComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-link-authentication',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }],\n    loaderror: [{\n      type: Output\n    }],\n    loaderstart: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeP24BankComponent {\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getP24Bankelement() {\n    return this.element;\n  }\n  createElement(options) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('p24Bank', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeP24BankComponent_Factory(t) {\n    return new (t || StripeP24BankComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeP24BankComponent,\n    selectors: [[\"ngx-stripe-p24-bank\"]],\n    contentQueries: function StripeP24BankComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeP24BankComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeP24BankComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeP24BankComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeP24BankComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-p24-bank',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeAuBankAccountComponent {\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getAuBankAccount() {\n    return this.element;\n  }\n  createElement(options = {}) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('auBankAccount', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripeAuBankAccountComponent_Factory(t) {\n    return new (t || StripeAuBankAccountComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeAuBankAccountComponent,\n    selectors: [[\"ngx-stripe-au-bank-account\"]],\n    contentQueries: function StripeAuBankAccountComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeAuBankAccountComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeAuBankAccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripeAuBankAccountComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeAuBankAccountComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-au-bank-account',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\nclass StripePaymentElementComponent {\n  stripeElementsService;\n  elementsProvider;\n  stripeElementRef;\n  element;\n  elements;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  appearance;\n  clientSecret;\n  doNotCreateUntilClientSecretIsSet = false;\n  load = new EventEmitter();\n  blur = new EventEmitter();\n  change = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  escape = new EventEmitter();\n  loaderror = new EventEmitter();\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || changes.clientSecret || changes.appearance || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, {\n        ...(this.elementsOptions || {}),\n        ...(this.appearance ? {\n          appearance: this.appearance\n        } : {}),\n        ...(this.clientSecret ? {\n          clientSecret: this.clientSecret\n        } : {})\n      }).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe, {\n        ...(this.elementsOptions || {}),\n        ...(this.appearance ? {\n          appearance: this.appearance\n        } : {}),\n        ...(this.clientSecret ? {\n          clientSecret: this.clientSecret\n        } : {})\n      }).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    return this.element.update(options);\n  }\n  collapse() {\n    return this.element.collapse();\n  }\n  fetchUpdates() {\n    return from(this.elements.fetchUpdates());\n  }\n  createElement(options = {}) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    try {\n      this.element = this.elements.create('payment', options);\n    } catch (err) {\n      this.elements = null;\n      throw err;\n    }\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', ev => this.blur.emit(ev));\n    this.element.on('focus', ev => this.focus.emit(ev));\n    this.element.on('ready', ev => this.ready.emit(ev));\n    this.element.on('escape', ev => this.escape.emit(ev));\n    this.element.on('loaderror', ev => this.loaderror.emit(ev));\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripePaymentElementComponent_Factory(t) {\n    return new (t || StripePaymentElementComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripePaymentElementComponent,\n    selectors: [[\"ngx-stripe-payment\"]],\n    viewQuery: function StripePaymentElementComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\",\n      appearance: \"appearance\",\n      clientSecret: \"clientSecret\",\n      doNotCreateUntilClientSecretIsSet: \"doNotCreateUntilClientSecretIsSet\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\",\n      loaderror: \"loaderror\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"]],\n    template: function StripePaymentElementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 1, 0);\n      }\n    },\n    dependencies: [CommonModule],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripePaymentElementComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-payment',\n      standalone: true,\n      template: `<div class=\"field\" #stripeElementRef></div>`,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    clientSecret: [{\n      type: Input\n    }],\n    doNotCreateUntilClientSecretIsSet: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }],\n    loaderror: [{\n      type: Output\n    }]\n  });\n})();\nclass StripePaymentMethodMessagingComponent {\n  stripeElementsService;\n  elementsProvider;\n  loadingTemplate;\n  stripeElementRef;\n  element;\n  containerClass;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  ready = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n    this.state = 'ready';\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n  getPaymentMethodMessaging() {\n    return this.element;\n  }\n  createElement(options) {\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('paymentMethodMessaging', options);\n    this.element.on('ready', () => this.ready.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n  static ɵfac = function StripePaymentMethodMessagingComponent_Factory(t) {\n    return new (t || StripePaymentMethodMessagingComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripePaymentMethodMessagingComponent,\n    selectors: [[\"ngx-stripe-payment-method-messaging\"]],\n    contentQueries: function StripePaymentMethodMessagingComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripePaymentMethodMessagingComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      ready: \"ready\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripePaymentMethodMessagingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, StripePaymentMethodMessagingComponent_Conditional_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(2, ctx.state !== \"ready\" && ctx.loadingTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i3.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripePaymentMethodMessagingComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-payment-method-messaging',\n      standalone: true,\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      @if (state !== 'ready' && loadingTemplate) {\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\" />\n      }\n    </div>\n  `,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }]\n  });\n})();\nclass StripePaymentRequestButtonComponent {\n  stripeElementsService;\n  elementsProvider;\n  stripeElementRef;\n  element;\n  paymentRequest;\n  containerClass;\n  paymentOptions;\n  options;\n  elementsOptions;\n  stripe;\n  load = new EventEmitter();\n  change = new EventEmitter();\n  blur = new EventEmitter();\n  focus = new EventEmitter();\n  ready = new EventEmitter();\n  token = new EventEmitter();\n  paymentMethod = new EventEmitter();\n  source = new EventEmitter();\n  cancel = new EventEmitter();\n  shippingaddresschange = new EventEmitter();\n  shippingoptionchange = new EventEmitter();\n  notavailable = new EventEmitter();\n  elements;\n  state = 'notready';\n  elementsSubscription;\n  constructor(stripeElementsService, elementsProvider) {\n    this.stripeElementsService = stripeElementsService;\n    this.elementsProvider = elementsProvider;\n  }\n  async ngOnChanges(changes) {\n    this.state = 'starting';\n    let updateElements = false;\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      const elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      this.elements = elements;\n      updateElements = true;\n    }\n    if (changes.paymentOptions && this.paymentRequest) {\n      this.updateRequest(this.paymentOptions);\n    }\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n  }\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe(elements => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n      this.state = 'ready';\n    }\n  }\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n  canMakePayment() {\n    return from(this.paymentRequest.canMakePayment());\n  }\n  update(options) {\n    this.element.update(options);\n  }\n  updateRequest(options) {\n    const {\n      currency,\n      total,\n      displayItems,\n      shippingOptions\n    } = options;\n    this.paymentRequest.update({\n      currency,\n      total,\n      displayItems,\n      shippingOptions\n    });\n  }\n  show() {\n    this.paymentRequest.show();\n  }\n  abort() {\n    this.paymentRequest.abort();\n  }\n  isShowing() {\n    return this.paymentRequest.isShowing();\n  }\n  /**\n   * @deprecated\n   */\n  getButton() {\n    return this.element;\n  }\n  async createElement(options = {}) {\n    this.paymentRequest = this.stripeElementsService.paymentRequest(this.stripe, this.paymentOptions);\n    this.paymentRequest.on('token', ev => this.token.emit(ev));\n    if (this.paymentMethod.observed) this.paymentRequest.on('paymentmethod', ev => this.paymentMethod.emit(ev));\n    if (this.source.observed && !this.paymentMethod.observed) this.paymentRequest.on('source', ev => this.source.emit(ev));\n    this.paymentRequest.on('cancel', () => this.cancel.emit());\n    this.paymentRequest.on('shippingaddresschange', ev => this.shippingaddresschange.emit(ev));\n    this.paymentRequest.on('shippingoptionchange', ev => this.shippingoptionchange.emit(ev));\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('paymentRequestButton', {\n      paymentRequest: this.paymentRequest,\n      ...options\n    });\n    const result = await this.paymentRequest.canMakePayment();\n    if (result) {\n      this.element.on('click', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit({\n        paymentRequestButton: this.element,\n        paymentRequest: this.paymentRequest\n      });\n    } else {\n      this.notavailable.emit();\n    }\n  }\n  static ɵfac = function StripePaymentRequestButtonComponent_Factory(t) {\n    return new (t || StripePaymentRequestButtonComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripePaymentRequestButtonComponent,\n    selectors: [[\"ngx-stripe-payment-request-button\"]],\n    viewQuery: function StripePaymentRequestButtonComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      paymentOptions: \"paymentOptions\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      change: \"change\",\n      blur: \"blur\",\n      focus: \"focus\",\n      ready: \"ready\",\n      token: \"token\",\n      paymentMethod: \"paymentMethod\",\n      source: \"source\",\n      cancel: \"cancel\",\n      shippingaddresschange: \"shippingaddresschange\",\n      shippingoptionchange: \"shippingoptionchange\",\n      notavailable: \"notavailable\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"stripeElementRef\", \"\"], [1, \"field\"]],\n    template: function StripePaymentRequestButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 1, 0);\n      }\n    },\n    dependencies: [CommonModule],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripePaymentRequestButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-payment-request-button',\n      standalone: true,\n      template: `<div class=\"field\" #stripeElementRef></div>`,\n      imports: [CommonModule]\n    }]\n  }], () => [{\n    type: StripeElementsService\n  }, {\n    type: StripeElementsDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    paymentOptions: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    token: [{\n      type: Output\n    }],\n    paymentMethod: [{\n      type: Output\n    }],\n    source: [{\n      type: Output\n    }],\n    cancel: [{\n      type: Output\n    }],\n    shippingaddresschange: [{\n      type: Output\n    }],\n    shippingoptionchange: [{\n      type: Output\n    }],\n    notavailable: [{\n      type: Output\n    }]\n  });\n})();\nclass StripeFactoryService {\n  version;\n  baseKey;\n  baseOptions;\n  loader;\n  window;\n  constructor(version, baseKey, baseOptions, loader, window) {\n    this.version = version;\n    this.baseKey = baseKey;\n    this.baseOptions = baseOptions;\n    this.loader = loader;\n    this.window = window;\n  }\n  create(key, options) {\n    if (!key && !this.baseKey) {\n      throw new Error('No key defined! Either you need to pass it as a parameter or define it when you call NgxStripeModule.forRoot()');\n    }\n    return new StripeInstance(this.version, this.loader, this.window, key || this.baseKey, options || this.baseOptions);\n  }\n  static ɵfac = function StripeFactoryService_Factory(t) {\n    return new (t || StripeFactoryService)(i0.ɵɵinject(NGX_STRIPE_VERSION), i0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), i0.ɵɵinject(STRIPE_OPTIONS), i0.ɵɵinject(LazyStripeAPILoader), i0.ɵɵinject(WindowRef));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: StripeFactoryService,\n    factory: StripeFactoryService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeFactoryService, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [NGX_STRIPE_VERSION]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [STRIPE_PUBLISHABLE_KEY]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [STRIPE_OPTIONS]\n    }]\n  }, {\n    type: LazyStripeAPILoader\n  }, {\n    type: WindowRef\n  }], null);\n})();\nconst components = [StripeAddressComponent, StripeAffirmMessageComponent, StripeAfterpayClearpayMessageComponent, StripeCardComponent, StripeCardNumberComponent, StripeCardExpiryComponent, StripeCardCvcComponent, StripeEpsBankComponent, StripeExpressCheckoutComponent, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeIssuingCardCvcDisplayComponent, StripeIssuingCardExpiryDisplayComponent, StripeIssuingCardNumberDisplayComponent, StripeIssuingCardPinDisplayComponent, StripeLinkAuthenticationComponent, StripeP24BankComponent, StripeAuBankAccountComponent, StripePaymentElementComponent, StripePaymentMethodMessagingComponent, StripePaymentRequestButtonComponent];\nconst directives = [StripeCardGroupDirective, StripeElementsDirective, NgxStripeElementLoadingTemplateDirective];\nconst currentVersion = '17.2.0';\nfunction _provideNgxStripe(publishableKey, options) {\n  return [LazyStripeAPILoader, StripeService, StripeFactoryService, StripeElementsService, WindowRef, DocumentRef, {\n    provide: STRIPE_PUBLISHABLE_KEY,\n    useValue: publishableKey\n  }, {\n    provide: STRIPE_OPTIONS,\n    useValue: options\n  }, {\n    provide: NGX_STRIPE_VERSION,\n    useValue: currentVersion\n  }];\n}\n/**\n * Provides the global NgxStripe providers and initializes.\n *\n * @usageNotes\n *\n * ### Providing the Global NgxStripe\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideNgxStripe(STRIPE_KEY)],\n * });\n * ```\n */\nfunction provideNgxStripe(publishableKey, options) {\n  return makeEnvironmentProviders([..._provideNgxStripe(publishableKey, options)]);\n}\nclass NgxStripeModule {\n  static forRoot(publishableKey, options) {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [..._provideNgxStripe(publishableKey, options)]\n    };\n  }\n  /**\n   * @deprecated\n   */\n  static forChild(publishableKey, options) {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [..._provideNgxStripe(publishableKey, options)]\n    };\n  }\n  static ɵfac = function NgxStripeModule_Factory(t) {\n    return new (t || NgxStripeModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxStripeModule,\n    imports: [CommonModule, StripeAddressComponent, StripeAffirmMessageComponent, StripeAfterpayClearpayMessageComponent, StripeCardComponent, StripeCardNumberComponent, StripeCardExpiryComponent, StripeCardCvcComponent, StripeEpsBankComponent, StripeExpressCheckoutComponent, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeIssuingCardCvcDisplayComponent, StripeIssuingCardExpiryDisplayComponent, StripeIssuingCardNumberDisplayComponent, StripeIssuingCardPinDisplayComponent, StripeLinkAuthenticationComponent, StripeP24BankComponent, StripeAuBankAccountComponent, StripePaymentElementComponent, StripePaymentMethodMessagingComponent, StripePaymentRequestButtonComponent, StripeCardGroupDirective, StripeElementsDirective, NgxStripeElementLoadingTemplateDirective],\n    exports: [StripeAddressComponent, StripeAffirmMessageComponent, StripeAfterpayClearpayMessageComponent, StripeCardComponent, StripeCardNumberComponent, StripeCardExpiryComponent, StripeCardCvcComponent, StripeEpsBankComponent, StripeExpressCheckoutComponent, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeIssuingCardCvcDisplayComponent, StripeIssuingCardExpiryDisplayComponent, StripeIssuingCardNumberDisplayComponent, StripeIssuingCardPinDisplayComponent, StripeLinkAuthenticationComponent, StripeP24BankComponent, StripeAuBankAccountComponent, StripePaymentElementComponent, StripePaymentMethodMessagingComponent, StripePaymentRequestButtonComponent, StripeCardGroupDirective, StripeElementsDirective, NgxStripeElementLoadingTemplateDirective]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, components]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxStripeModule, [{\n    type: NgModule,\n    args: [{\n      exports: [...components, ...directives],\n      imports: [CommonModule, ...components, ...directives]\n    }]\n  }], null, null);\n})();\nfunction injectStripe(publishableKey, options) {\n  if (publishableKey) {\n    const factory = inject(StripeFactoryService);\n    return factory.create(publishableKey, options);\n  } else if (inject(STRIPE_PUBLISHABLE_KEY)) {\n    return inject(StripeService);\n  }\n  throw new Error('Publishable Key is required either global or pass as parameter');\n}\n\n/*\n * Public API Surface of ngx-stripe\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DocumentRef, LazyStripeAPILoader, NGX_STRIPE_VERSION, NgxStripeElementLoadingTemplateDirective, NgxStripeModule, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY, StripeAddressComponent, StripeAffirmMessageComponent, StripeAfterpayClearpayMessageComponent, StripeAuBankAccountComponent, StripeCardComponent, StripeCardCvcComponent, StripeCardExpiryComponent, StripeCardGroupDirective, StripeCardNumberComponent, StripeElementsDirective, StripeElementsService, StripeEpsBankComponent, StripeExpressCheckoutComponent, StripeFactoryService, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeInstance, StripeIssuingCardCvcDisplayComponent, StripeIssuingCardExpiryDisplayComponent, StripeIssuingCardNumberDisplayComponent, StripeIssuingCardPinDisplayComponent, StripeLinkAuthenticationComponent, StripeP24BankComponent, StripePaymentElementComponent, StripePaymentMethodMessagingComponent, StripePaymentRequestButtonComponent, StripeService, WindowRef, injectStripe, provideNgxStripe };\n"],
  "mappings": "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",
  "names": ["window", "document"]
}
